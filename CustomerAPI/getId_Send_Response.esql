

CREATE COMPUTE MODULE getId_Send_Response
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE outRef REFERENCE TO OutputRoot;
		
		DECLARE pathParam CHARACTER InputLocalEnvironment.REST.Input.Parameters.id;
		DECLARE acceptHeader CHARACTER InputRoot.HTTPInputHeader.Accept;
		DECLARE isJson BOOLEAN CONTAINS(acceptHeader, 'application/json');
		DECLARE isXML BOOLEAN CONTAINS(acceptHeader, 'application/xml');
		
		IF isJson AND pathParam = 1 THEN
			CREATE LASTCHILD OF outRef Domain('JSON') NAME 'JSON';
			CREATE LASTCHILD OF outRef.JSON NAME 'Data';
			
			CREATE LASTCHILD OF outRef.JSON.Data.Customer NAME 'Id' VALUE 1;
			CREATE LASTCHILD OF outRef.JSON.Data.Customer NAME 'name' VALUE 'Pierre';
			CREATE LASTCHILD OF outRef.JSON.Data.Customer NAME 'lastName' VALUE 'GUESTAULT';
			CREATE LASTCHILD OF outRef.JSON.Data.Customer NAME 'contact' VALUE '+4472345678';
			CREATE LASTCHILD OF outRef.JSON.Data.Customer NAME 'organization' VALUE 'TCS';
			
		ELSEIF isJson AND pathParam = 2 THEN
			CREATE LASTCHILD OF outRef Domain('JSON') NAME 'JSON';
			CREATE LASTCHILD OF outRef.JSON NAME 'Data';
			
			CREATE LASTCHILD OF outRef.JSON.Data.Customer NAME 'Id' VALUE 2;
			CREATE LASTCHILD OF outRef.JSON.Data.Customer NAME 'name' VALUE 'Aslam';
			CREATE LASTCHILD OF outRef.JSON.Data.Customer NAME 'lastName' VALUE 'Ahmed';
			CREATE LASTCHILD OF outRef.JSON.Data.Customer NAME 'contact' VALUE '+923072345679';
			CREATE LASTCHILD OF outRef.JSON.Data.Customer NAME 'organization' VALUE 'Systems Limited';
			
		ELSEIF isXML AND pathParam = 1 THEN
			SET OutputRoot.HTTPResponseHeader."Content-Type" = 'application/xml';
			
			CREATE LASTCHILD OF outRef Domain('XMLNSC') NAME 'XMLNSC';
			
			CREATE LASTCHILD OF outRef.XMLNSC.Customer NAME 'Id' VALUE 1;
			CREATE LASTCHILD OF outRef.XMLNSC.Customer NAME 'name' VALUE 'Pierre';
			CREATE LASTCHILD OF outRef.XMLNSC.Customer NAME 'lastName' VALUE 'GUESTAULT';
			CREATE LASTCHILD OF outRef.XMLNSC.Customer NAME 'contact' VALUE '+4472345678';
			CREATE LASTCHILD OF outRef.XMLNSC.Customer NAME 'organization' VALUE 'TCS';
			
		ELSEIF isXML AND pathParam = 2 THEN
			SET OutputRoot.HTTPResponseHeader."Content-Type" = 'application/xml';
			
			CREATE LASTCHILD OF outRef Domain('XMLNSC') NAME 'XMLNSC';
			
			CREATE LASTCHILD OF outRef.XMLNSC.Customer NAME 'Id' VALUE 2;
			CREATE LASTCHILD OF outRef.XMLNSC.Customer NAME 'name' VALUE 'Aslam';
			CREATE LASTCHILD OF outRef.XMLNSC.Customer NAME 'lastName' VALUE 'Ahmed';
			CREATE LASTCHILD OF outRef.XMLNSC.Customer NAME 'contact' VALUE '+923072345679';
			CREATE LASTCHILD OF outRef.XMLNSC.Customer NAME 'organization' VALUE 'Systems Limited';
			
		ELSEIF (isXML AND isJson) OR (NOT isXML AND NOT isJson) THEN 
			SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 400;
			
		ELSE
			SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 404;
			
		END IF;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
